rules_version = "2";
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    // commenting temporarily because this is a huge pain when frequently updating the architecture.
    // function isAuthenticated() {
    //   return request.auth.uid != null;
    // }

    // match /users/{user} {
    // 	allow read: if isAuthenticated();
    //   allow update: if request.auth.uid == user;
    //   allow create: if false;
    // }

    // match /cookbooks {
    //   allow read, write: if true;
    // }
  	// match /recipes/{recipe} {
    //   allow read: if isAuthenticated() && resource.data.uid == request.auth.uid;
    //   allow create, update: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
    //   allow delete: if isAuthenticated() && request.resource.data.uid == request.auth.uid;

    //   function getRecipeData() {
    //     return get(/databases/$(database)/documents/recipes/$(recipe)).data;
    //   }

    //   match /ingredients/{Ingredient} {
    //     allow read: if isAuthenticated() && getRecipeData().uid == request.auth.uid;
    //     allow write: if isAuthenticated() && getRecipeData().uid == request.auth.uid;
    //   }

    //   match /steps/{step} {
    //     allow read: if isAuthenticated() && getRecipeData().uid == request.auth.uid;
    //     allow write: if isAuthenticated() && getRecipeData().uid == request.auth.uid;
    //   }
    // }
    // match /ingredients/{ingredient} {
    //   allow read, write: if isAuthenticated();
    // }
    // match /carts/{cart} {
    //   allow read, write: if request.auth.uid == cart;
    // }
  }
}